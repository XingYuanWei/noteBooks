vnote_backup_file_826537664 F:/VNote/Algorithm/2.Add Two Numbers.md
# 2.Add Two Numbers


## 题目

> You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.
> 
> You may assume the two numbers do not contain any leading zero, except the number 0 itself.
> 
> Example:
> 
> Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
> Output: 7 -> 0 -> 8
> Explanation: 342 + 465 = 807.

## 题目翻译
> 给定两个非空Linked List表示两个非负整数，每个数字以倒置的方式单独的存储在每个节点中。让两个数字相加使其返回一个新的Linked List。

## 思路
就像在纸张上列竖式计算一样，从最后一个数字开始加起，然后如果超过了10，则保留下取余10后数，然后进位为1，待到下一位两个数字相加的时候，
然后加上这个进位，之后的数字也以此类推。342 + 465 = 807。把这个过程可以用下图进行表示。

![两个数相加的过程表示图](_v_images/20190123225015685_30839.png)
>例如5+7=12，这样的情况下，我们赋值当前的数值为2，让进位carry=1，进位carry要么为1，要么为0，因为单个数相加即使加上进位1
>也不过是9+9+1=19，也不会超过20，这样的话要么进位为1，要么进位为0。

## 解决问题流程大概如下
## 1. 创建一个节点为要返回的数值，作为他的头结点，可以取名head，另设头指针curr指向头结点
## 2. 初始化进位carry为0
## 3. 构建p和q两个指针指向链表1和链表2
## 4. 循环迭代两个链表的节点直到链表的末节点
#### ① 创建变量x并把它赋值为指针p所指向结点的值，如果此时该p指针指向了最后一个节点，则赋值为0
#### ② 创建变量y并把它赋值为指针q所指向结点的值，如果此时该q指针指向了最后一个节点，则赋值为0
#### ③ 创建变量sum值为x+y+carry
#### ④ 更新变量carry = sum / 10
#### ⑤ 创建一个新节点，其值为sum mod 10，使得curr的next指向该新节点
#### ⑥ 让p和q指向下一个节点
## 5. 检查如果carry为1，则再创建一个新节点为1并添加到结果链表的最后
## 6. 返回head节点的next指针


